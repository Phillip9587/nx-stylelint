name: CI

on:
  pull_request:
  push:
    branches:
      - main
    tags:
      - v*
    paths-ignore:
      - '**/*.md'

jobs:
  build:
    name: Build, Lint and Test
    runs-on: ubuntu-latest
    env:
      NX_BRANCH: ${{ github.event.number || github.ref_name }}
      NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          check-latest: true
          cache: npm

      - run: npm ci

      - run: npx nx lint nx-stylelint
        if: always()

      - run: npx nx test nx-stylelint --ci
        if: always()

      - run: npx nx build nx-stylelint
        if: always()

  e2e:
    name: E2E Matrix - ${{ matrix.os }} (Node ${{ matrix.node-version }})
    runs-on: ${{ matrix.os }}
    env:
      NX_BRANCH: ${{ github.event.number || github.ref_name }}
      NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
    needs: build
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        node-version:
          - 18
          - 20
          - 22
      fail-fast: false

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          check-latest: true
          cache: npm

      - run: npm ci

      - run: npx nx run e2e:e2e --configuration=ci

  publish:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    env:
      NX_BRANCH: ${{ github.event.number || github.ref_name }}
      NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
      IS_BETA_RELEASE: ${{ contains(github.ref_name, 'beta') }}
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          registry-url: https://registry.npmjs.org
          check-latest: true
          cache: npm

      - run: npm ci

      - name: Publish
        run: npx nx release publish
        shell: bash
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_PROVENANCE: true
